{
  "name": "RAG responses supabase",
  "nodes": [
    {
      "parameters": {
        "modelName": "rerank-multilingual-v3.0",
        "topN": 5
      },
      "type": "@n8n/n8n-nodes-langchain.rerankerCohere",
      "typeVersion": 1,
      "position": [
        4240,
        1600
      ],
      "id": "6a99cb65-c096-4fe8-ab9d-32233cd280c7",
      "name": "Reranker Cohere",
      "credentials": {
        "cohereApi": {
          "id": "N9DnY88wfEgW95Ly",
          "name": "CohereApi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "chunkSize": 700,
        "chunkOverlap": 140,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        944,
        368
      ],
      "id": "5d5a2838-dde8-4b76-ab8c-2fb55c8b0396",
      "name": "Recursive Character Text Splitter2"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import csv\nimport io\n\n# Получаем данные из предыдущего узла\ncsv_string = items[0].json['data']\n\n# Нормализуем переносы строк для надежности\ncsv_string = csv_string.replace('\\\\r\\\\n', '\\\\n')\n\n# Используем стандартный DictReader, который корректно\n# обрабатывает запятые внутри кавычек\nreader = csv.DictReader(io.StringIO(csv_string))\n\n# Преобразуем результат в список, который n8n понимает\nreturn [row for row in reader]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3392,
        1328
      ],
      "id": "cc5a86c0-1a42-433e-a398-7d599fe3613c",
      "name": "Parse CSV with Code"
    },
    {
      "parameters": {
        "url": "https://stepik.org/media/attachments/lesson/1830593/questions_table.csv",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3072,
        1328
      ],
      "id": "5b41d7b9-644f-4607-a5bc-18eb90d24aaa",
      "name": "Download CSV File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "54UNvCGYNpwgHk7o",
          "name": "Google Drive account 14"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        3680,
        1568
      ],
      "id": "ac87b3cd-ef3f-40ac-80b2-dd482a2077a7",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "k7zHjkCqPajKPBZj",
          "name": "OpenAi account 30"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Используй этот инструмент первым, чтобы найти в базе знаний документы, релевантные вопросу пользователя.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 5,
        "includeDocumentMetadata": false,
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        4064,
        1360
      ],
      "id": "2e420551-6229-4115-8115-fbd5d75d20eb",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "kiCZ6qHusPK3yLbE",
          "name": "Supabase cred rag"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Ты — точный и фактический ассистент. Отвечай на вопрос пользователя {{ $json.Question }}, основываясь только на предоставленном контексте из инструмента поиска. Если вопрос касается значения, например, сколько было съедено килограмм яблок, а ответ в тексте \"5 тонн\", то отвечай только числом в строгом соответствии с вопросом: \"5000\". Ответ должен быть кратким и содержать только число или факт, без дополнительных объяснений.\n\nВсегда используй инструмент Supabase Vector Store для поиска информации перед ответом. Все ответы есть в хранилище.",
        "options": {
          "systemMessage": "=Ты — ассистент для высокоточного извлечения фактов. Твоя единственная задача — отвечать на вопросы, используя СТРОГО предоставленный контекст от твоего инструмента поиска. Не используй свои внутренние знания и ничего не додумывай.\n\n**Твой алгоритм:**\n1. Используй свой инструмент поиска, чтобы найти информацию по вопросу пользователя.\n2. Внимательно проанализируй полученный контекст.\n3. Сформируй ответ, основываясь ИСКЛЮЧИТЕЛЬНО на этом контексте.\n\n**Правила ответа:**\n- Если ответ — это число, выведи ТОЛЬКО это число.\n- Если в предоставленном контексте точного ответа нет, выведи 666."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        3952,
        992
      ],
      "id": "0e62420c-56de-448b-8ec5-1d28a470c799",
      "name": "Generate Answer via RAG",
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1424,
        352
      ],
      "id": "eac16a93-4a6f-41b2-a0dd-b87bc7c15fa4",
      "name": "Merge Indexing Branches"
    },
    {
      "parameters": {
        "chunkSize": 700,
        "chunkOverlap": 140,
        "options": {
          "splitCode": "markdown"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        976,
        928
      ],
      "id": "23c368e5-7f1a-4c2a-8a47-b9329a261af1",
      "name": "Recursive Character Text Splitter1",
      "disabled": true
    },
    {
      "parameters": {
        "dataType": "binary",
        "loader": "textLoader",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        848,
        736
      ],
      "id": "9131b4a7-1155-4e05-a860-fba0c3c9eca4",
      "name": "Default Data Loader",
      "disabled": true
    },
    {
      "parameters": {
        "dataType": "binary",
        "loader": "textLoader",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        848,
        160
      ],
      "id": "a929781d-657a-42f1-bde8-00fd3f30e093",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "id"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        752,
        -32
      ],
      "id": "f96f30e2-41d7-48b1-b1aa-035b3ac8aea4",
      "name": "Insert into Supabase (OpenAI)",
      "notesInFlow": false,
      "credentials": {
        "supabaseApi": {
          "id": "kiCZ6qHusPK3yLbE",
          "name": "Supabase cred rag"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -672,
        336
      ],
      "id": "b3c4319a-372e-4798-86ef-6694b6177580",
      "name": "Start RAG Process"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1eiiE4NmlhlKqeDCuc00L1XZ3rthvCwzAD18XjWF-NvM",
          "mode": "list",
          "cachedResultName": "Answers",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1eiiE4NmlhlKqeDCuc00L1XZ3rthvCwzAD18XjWF-NvM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1il5wpEjbjX-wgBAmt9w8KClsPf-m_ADWjqWZWAnLTpk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_id": "={{ $json.row_id }}",
            "Answer": "={{ $json.Answer }}"
          },
          "matchingColumns": [
            "data"
          ],
          "schema": [
            {
              "id": "row_id",
              "displayName": "row_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Answer",
              "displayName": "Answer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Question",
              "displayName": "Question",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        4736,
        1216
      ],
      "id": "1fb1be2c-5e1d-4774-a4bd-6827729d1910",
      "name": "Save Results to CSV",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "pI4ZZe9t4Jt86Ygd",
          "name": "Google Sheets account 12"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "30919d2f-349b-4a1c-ad8e-9064b146f88a",
              "name": "row_id",
              "value": "={{ $('Parse CSV with Code').item.json.row_id }}",
              "type": "string"
            },
            {
              "id": "dd227d3e-6960-44e9-885e-1871a3812a45",
              "name": "Question",
              "value": "={{ $('Parse CSV with Code').item.json.Question }}",
              "type": "string"
            },
            {
              "id": "8244c2b4-0931-4beb-b186-61ca012f2e53",
              "name": "Answer",
              "value": "={{$('Generate Answer via RAG').item.json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4448,
        1216
      ],
      "id": "fe07c922-53da-450d-a224-cac52047cd4c",
      "name": "Format Final Answer"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        3760,
        1296
      ],
      "id": "f0df6bed-cbe1-4548-97f0-f40f57293e15",
      "name": "OpenRouter LLM",
      "credentials": {
        "openRouterApi": {
          "id": "SToaU6AIVh2FP5p0",
          "name": "OpenRouter"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {
          "keepSource": "binary"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        48,
        224
      ],
      "id": "6aa379d3-f9fd-4d71-8ced-90d3f0b090cf",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        576,
        176
      ],
      "id": "2e2c71ea-1c66-4e9b-a6aa-c42c3a4e0c8e",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "k7zHjkCqPajKPBZj",
          "name": "OpenAi account 30"
        }
      }
    },
    {
      "parameters": {
        "content": "## Воркфлоу №2: Тестирование RAG\n\n1. Загрузка: Чтение CSV-файла с вопросами по URL.\n\n1. Парсинг: Преобразование CSV в JSON для обработки каждой строки.\n\n1. Поиск: Для каждого вопроса выполняется поиск релевантных документов в Supabase.\n\n1. Генерация: Ответ формируется LLM-моделью (gpt-4o-mini через OpenRouter) на основе найденного контекста.\n\n1. Сохранение: Все ответы агрегируются и сохраняются в итоговый CSV-файл для оценки.",
        "height": 848,
        "width": 2480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2512,
        928
      ],
      "typeVersion": 1,
      "id": "6764cc13-f71f-4973-9667-486c3b33d04d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "=documents",
          "mode": "id"
        },
        "embeddingBatchSize": "={{ 200 }}",
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        608,
        640
      ],
      "id": "e9c302a7-1bb6-4ab5-9931-645fbbedbd26",
      "name": "Upsert to Supabase (HF)",
      "notesInFlow": false,
      "credentials": {
        "supabaseApi": {
          "id": "kiCZ6qHusPK3yLbE",
          "name": "Supabase cred rag"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "modelName": "cointegrated/LaBSE-en-ru",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        384,
        928
      ],
      "id": "2ea9b329-1498-464a-91e0-1d4b563690e0",
      "name": "Hugging Face Embeddings",
      "credentials": {
        "huggingFaceApi": {
          "id": "CxmfClmZUdsk7IH5",
          "name": "HuggingFaceApi Embeddings"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Воркфлоу №1: Индексация базы знаний\n\n1. Запуск: Вручную через 'Manual Trigger'.\n\n1. Загрузка: Чтение гугл-документа как текста.\n\n1. Векторизация: Преобразование текста в эмбеддинги. Есть две ветки:\n\n    - Активная: OpenAI text-embedding-3-large для максимальной точности.\n\n    - Неактивная: Hugging Face cointegrated/LaBSE-en-ru как альтернатива.\n\n1. Сохранение: Загрузка чанков и векторов в Supabase Vector Store.",
        "height": 1360,
        "width": 2480
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -768,
        -208
      ],
      "typeVersion": 1,
      "id": "9355c533-c0e2-4be7-9646-a8a922cd4f68",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1hrYPKFcH1zTCeFQSCrMHMlZ1z_oJKZXMef4ld_-5flQ",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -352,
        240
      ],
      "id": "7c7a4b98-f3b3-4927-b77d-8694ba5343b2",
      "name": "Load Google Doc",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "54UNvCGYNpwgHk7o",
          "name": "Google Drive account 14"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Download CSV File": {
      "main": [
        [
          {
            "node": "Parse CSV with Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Parse CSV with Code": {
      "main": [
        [
          {
            "node": "Generate Answer via RAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "Generate Answer via RAG",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge Indexing Branches": {
      "main": [
        [
          {
            "node": "Download CSV File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter2": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase (OpenAI)",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase (OpenAI)": {
      "main": [
        [
          {
            "node": "Merge Indexing Branches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start RAG Process": {
      "main": [
        [
          {
            "node": "Load Google Doc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Answer via RAG": {
      "main": [
        [
          {
            "node": "Format Final Answer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Final Answer": {
      "main": [
        [
          {
            "node": "Save Results to CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter LLM": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Answer via RAG",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Upsert to Supabase (HF)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert into Supabase (OpenAI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase (OpenAI)",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Upsert to Supabase (HF)",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Upsert to Supabase (HF)": {
      "main": [
        [
          {
            "node": "Merge Indexing Branches",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Hugging Face Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Upsert to Supabase (HF)",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Load Google Doc": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reranker Cohere": {
      "ai_reranker": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fc393296-9fbb-4feb-b2e3-498fbbeef8bf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b85f0d09f3d863b4b665ea0e3475dac5af387c16ba8aaf52f137a98c26bd5361"
  },
  "id": "EqNRS8e5qlDGRRsv",
  "tags": []
}